##Macros

########################################################################################

[gcode_macro AUTO_LEVEL]
gcode:
    G28                     ; Home all axes
    G29                     ; Auto bed leveling

########################################################################################

[gcode_macro Z_OFFSET_CALIBRATE]
variable_z_offset: 0.0
gcode:
    G28                     ; Home all axes
    G1 Z10                  ; Move Z up to 10mm to avoid crashing
    G1 X100 Y100 F3000     ; Move to a safe position for adjustment
    G1 Z0                   ; Move Z to the zero position (bed)
    M117 Please adjust Z-offset ; Display message on the LCD

########################################################################################

[gcode_macro START_PRINT]
gcode:
    AUTO_LEVEL              ; Call the auto level macro
    HEAT_UP                 ; Heat up the printer
    G92 E0                  ; Reset the extruder position
    G1 F140 E30             ; Prime the nozzle
    G92 E0                  ; Reset the extruder position
    G1 F300                 ; Set feed rate

########################################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

########################################################################################


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
########################################################################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

########################################################################################

[gcode_macro CHANGE_FILAMENT]
gcode:
    M83                     ; Set extruder to relative mode
    G91                     ; Set to relative positioning
    G1 E-10 F300            ; Retract 10mm of filament
    G90                     ; Set to absolute positioning
    G1 Z+10 F300            ; Move Z up 10mm
    G1 X0 Y0 F300           ; Move to the front
    M104 S0                 ; Turn off extruder heater
    M140 S0                 ; Turn off bed heater

########################################################################################

#[gcode_macro LIGHT_TOGGLE]
#variable_light_state: 0
#gcode:
    #{% if printer["gcode_macro LIGHT_TOGGLE"].light_state == 0 %}
        #SET_GCODE_VARIABLE MACRO=LIGHT_TOGGLE VARIABLE=light_state VALUE=1
        #SET_LED LED=top_LEDs WHITE=1.00 SYNC=0 TRANSMIT=1
    #{% else %}
       #SET_GCODE_VARIABLE MACRO=LIGHT_TOGGLE VARIABLE=light_state VALUE=0
       #SET_LED LED=top_LEDs WHITE=0.00 SYNC=0 TRANSMIT=1
    #{% endif %}

########################################################################################

[gcode_macro LIGHT_TOGGLE]
variable_light_state: 0
variable_intensity: 1.0  # Standardmäßig volle Intensität, falls keine angegeben wird
gcode:
    {% set intensity = params.INTENSITY|default(printer["gcode_macro LIGHT_TOGGLE"].intensity)|float %}
    {% if printer["gcode_macro LIGHT_TOGGLE"].light_state == 0 %}
        SET_GCODE_VARIABLE MACRO=LIGHT_TOGGLE VARIABLE=light_state VALUE=1
        SET_GCODE_VARIABLE MACRO=LIGHT_TOGGLE VARIABLE=intensity VALUE={ intensity }
        SET_LED LED=top_LEDs WHITE={ intensity } SYNC=0 TRANSMIT=1
    {% else %}
        SET_GCODE_VARIABLE MACRO=LIGHT_TOGGLE VARIABLE=light_state VALUE=0
        SET_LED LED=top_LEDs WHITE=0.00 SYNC=0 TRANSMIT=1
    {% endif %}


